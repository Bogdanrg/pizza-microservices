version: '3.9'

services:
  django:
    build: .
    volumes:
      - .:/app
    container_name: 'django'
    command: "python manage.py runserver 0.0.0.0:8080"
    ports:
      - "8080:8080"
    depends_on:
      - db
    networks:
        - services

  db:
    image: postgres
    ports:
      - "5433:5432"
    restart: always
    environment:
      - POSTGRES_DB=pizza
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    volumes:
      - pgdb:/var/lib/postgresql/data
    networks:
        - services

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
        - services

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9090:9090"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INTERNAL://kafka:29090,LISTENER_EXTERNAL://localhost:9090
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INTERNAL:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
       - services

  queue:
    build: .
    container_name: 'queue'
    command: "python consumer.py"
    depends_on:
      - django
    volumes:
      - . :/app
    restart: always
    network_mode: host

volumes:
  pgdb:
    external: true

networks:
  services:
    name: "services"
    external: true